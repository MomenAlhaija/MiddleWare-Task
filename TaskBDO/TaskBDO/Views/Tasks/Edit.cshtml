@model TaskBDO.Models.Tasks

@{
    ViewBag.Title = "Edit";
}

<h2 class="text-primary text-center">Edit Task</h2>
<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="my-form">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Task_Id)
        <input type="hidden" value="@Model.Project_Id" name="Project_Id" />
      

        <div class="form-group">
                @Html.LabelFor(model => model.Task_Name, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Task_Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Task_Name, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
                @Html.LabelFor(model => model.Task_Description, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Task_Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Task_Description, "", new { @class = "text-danger" })
        </div>


        <div class="form-group">
            <input type="submit" value="Save" class="btn btn-success" />
            @Html.ActionLink("Back to List", "Index", new {id=Model.Project_Id}, new {@class="btn btn-primary"})

        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

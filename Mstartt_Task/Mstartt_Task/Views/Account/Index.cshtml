@model IEnumerable<Mstartt_Task.Models.Account>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@section Title{
    <p class="text-primary" style="font-size:1.75rem">Accounts</p>
}
@section section2{
    <span class="absolute inset-y-0 left-0 w-1 bg-purple-600 rounded-tr-lg rounded-br-lg"></span>

}
<br />
<br />
<div class=" grid px-6 mx-auto">
    <br />
    <br />
   <div class="d-flex justify-content-center " >
        <div class="relative w-full max-w-xl mr-6 focus-within:text-purple-500" style="border-radius:5px;border-color:black;" >
        <form asp-action="Index">

            <div class="absolute inset-y-0 flex items-center pl-2">

                    <select name="SelectOption">
                        <option value="UserId,">User Id</option>
                        <option value="AccountID">Account Id</option>
                        <option value="AccountNumber">Account Number</option>
                    </select>
             <button type="submit" style="margin-left:30%">
                    <svg class="w-4 h-4"
                         aria-hidden="true"
                         fill="currentColor"
                         viewBox="0 0 20 20">
                        <path fill-rule="evenodd"
                              d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z"
                              clip-rule="evenodd"></path>
                    </svg>
             </button>
                

            </div>
            <input class="w-full pl-8 pr-2 text-sm text-white-700 placeholder-gray-600 bg-white-100 border-0 rounded-md dark:placeholder-white-500 dark:focus:shadow-outline-gray dark:focus:placeholder-gray-600 dark:bg-gray-700 dark:text-white-200 focus:placeholder-white-500 focus:bg-white focus:border-purple-300 focus:outline-none focus:shadow-outline-purple form-input"
                   type="text"
                   name="SearchText"
                   style="padding-left:40%"
                   placeholder="Search on User"
                   aria-label="Search" 
                   />
        </form>
        </div>

   </div>
   <br />
   <br />
   <div style="width:20%">
        <a class="btn btn-primary text-center" asp-action="Create" asp-controller="Account" style="font-size:larger;">Add Account</a>

   </div>
<br />
<br />


    <div class="w-full overflow-hidden rounded-lg shadow-xs">
        <div class="w-full overflow-x-auto">
            <table class="w-full whitespace-no-wrap">
                <thead>
                    <tr class="text-xs font-semibold tracking-wide text-left text-gray-500 uppercase border-b dark:border-gray-700 bg-gray-50 dark:text-gray-400 dark:bg-gray-800">


                        <th class="px-2 py-2">
                            @Html.DisplayNameFor(model => model.UserID)

                        </th>
                        <th class="px-2 py-2">
                            @Html.DisplayNameFor(model => model.Server_DateTime)
                        </th>
                        <th class="px-2 py-2">
                            @Html.DisplayNameFor(model => model.DateTime_UTC)
                        </th>
                        <th class="px-2 py-2">
                            @Html.DisplayNameFor(model => model.Update_DateTime_UTC)
                        </th>
                        <th class="px-2 py-2">
                            @Html.DisplayNameFor(model => model.Status)

                        </th>
                        <th class="px-2 py-2">
                            @Html.DisplayNameFor(model => model.Account_Number)

                        </th>
                        <th class="px-2 py-2">
                            @Html.DisplayNameFor(model => model.Balance)
                        </th>
                        <th class="px-2 py-2">
                            @Html.DisplayNameFor(model => model.Currency)

                        </th>
                        <th class="px-2 py-2">Actions</th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y dark:divide-gray-700 dark:bg-gray-800">
                    @foreach (var item in Model)
                    {
                        <tr class="text-gray-700 dark:text-gray-400">
                            <td class="px-4 py-3">
                                <div class="flex items-center text-sm">
                                    <!-- Avatar with inset shadow -->

                                    <div>
                                        <p class="font-semibold">
                                            @item.User.Username

                                        </p>

                                    </div>
                                </div>
                            </td>
                            
                            <td>
                                @item.Server_DateTime
                            </td>
                            <td>
                                @item.DateTime_UTC
                            </td>
                            <td class="px-4 py-3 text-sm">
                                @item.Update_DateTime_UTC
                            </td>
                            <td class="px-4 py-3 text-xs">
                                @if (item.Status == 1)
                                {
                                    <span class="px-2 py-1 font-semibold leading-tight text-green-700 bg-green-100 rounded-full dark:bg-green-700 dark:text-green-100">
                                        Accepted
                                    </span>
                                }
                                else if (item.Status == 2)
                                {
                                    <span class="px-2 py-1 font-semibold leading-tight text-gray-700 bg-gray-100 rounded-full dark:text-white dark:bg-gray-600">
                                        Pending
                                    </span>
                                }
                                else 
                                {
                                    <span class="px-2 py-1 font-semibold leading-tight text-red-700 bg-red-100 rounded-full dark:text-dark dark:bg-red-600">
                                        Deleted
                                    </span>
                                }
                            </td>
                           
                            <td class="px-4 py-3 text-sm">
                                @item.Account_Number
                            </td>
                            <td class="px-4 py-3 text-sm">
                                @item.Balance
                            </td>
                            <td class="px-4 py-3 text-sm">
                                @item.Currency
                            </td>
                        
                            <td class="px-4 py-3">
                                <div class="flex items-center space-x-4 text-sm">
                                    <a asp-action="Edit" asp-controller="Account" asp-route-Id="@item.ID" class="flex items-center justify-between px-2 py-2 text-sm font-medium leading-5 text-purple-600 rounded-lg dark:text-gray-400 focus:outline-none focus:shadow-outline-gray"
                                            aria-label="Edit" >
                                        <svg class="w-5 h-5"
                                             aria-hidden="true"
                                             fill="currentColor"
                                             viewBox="0 0 20 20">
                                            <path d="M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z"></path>
                                        </svg>
                                    </a>
                                    <button class="flex items-center justify-between px-2 py-2 text-sm font-medium leading-5 text-purple-600 rounded-lg dark:text-gray-400 focus:outline-none focus:shadow-outline-gray"
                                            aria-label="Delete" onclick="Delete(@item.ID)">
                                        <svg class="w-5 h-5"
                                             aria-hidden="true"
                                             fill="currentColor"
                                             viewBox="0 0 20 20">
                                            <path fill-rule="evenodd"
                                                  d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z"
                                                  clip-rule="evenodd"></path>
                                        </svg>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>


<script>
     function Delete(id){
        const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: 'btn btn-success',
                cancelButton: 'btn btn-danger'
            },
            buttonsStyling: true
        })

        swalWithBootstrapButtons.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, delete it!',
            cancelButtonText: 'No, cancel!',
            reverseButtons: true
        }).then((result) => {
            if (result.isConfirmed) {
                swalWithBootstrapButtons.fire(
                    'Deleted!',
                    'Your file has been deleted.',
                    'success',
                    window.location.href = "/Account/Delete?id=" + id
                )
            } else if (
                /* Read more about handling dismissals below */
                result.dismiss === Swal.DismissReason.cancel
            ) {
                swalWithBootstrapButtons.fire(
                    'Cancelled',
                    'Your imaginary file is safe :)',
                    'error'
                )
            }
        })
    }
</script>